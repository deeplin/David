package com.async.davidconsole.dao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.david.incubator.dao.AnalogCommand;
import com.david.incubator.dao.CtrlGetCommand;
import com.david.incubator.dao.SensorRange;
import com.david.incubator.dao.Spo2GetCommand;
import com.david.incubator.dao.StatusCommand;
import com.david.incubator.dao.UserModel;
import com.david.incubator.dao.WeightModel;

import com.async.davidconsole.dao.gen.AnalogCommandDao;
import com.async.davidconsole.dao.gen.CtrlGetCommandDao;
import com.async.davidconsole.dao.gen.SensorRangeDao;
import com.async.davidconsole.dao.gen.Spo2GetCommandDao;
import com.async.davidconsole.dao.gen.StatusCommandDao;
import com.async.davidconsole.dao.gen.UserModelDao;
import com.async.davidconsole.dao.gen.WeightModelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig analogCommandDaoConfig;
    private final DaoConfig ctrlGetCommandDaoConfig;
    private final DaoConfig sensorRangeDaoConfig;
    private final DaoConfig spo2GetCommandDaoConfig;
    private final DaoConfig statusCommandDaoConfig;
    private final DaoConfig userModelDaoConfig;
    private final DaoConfig weightModelDaoConfig;

    private final AnalogCommandDao analogCommandDao;
    private final CtrlGetCommandDao ctrlGetCommandDao;
    private final SensorRangeDao sensorRangeDao;
    private final Spo2GetCommandDao spo2GetCommandDao;
    private final StatusCommandDao statusCommandDao;
    private final UserModelDao userModelDao;
    private final WeightModelDao weightModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        analogCommandDaoConfig = daoConfigMap.get(AnalogCommandDao.class).clone();
        analogCommandDaoConfig.initIdentityScope(type);

        ctrlGetCommandDaoConfig = daoConfigMap.get(CtrlGetCommandDao.class).clone();
        ctrlGetCommandDaoConfig.initIdentityScope(type);

        sensorRangeDaoConfig = daoConfigMap.get(SensorRangeDao.class).clone();
        sensorRangeDaoConfig.initIdentityScope(type);

        spo2GetCommandDaoConfig = daoConfigMap.get(Spo2GetCommandDao.class).clone();
        spo2GetCommandDaoConfig.initIdentityScope(type);

        statusCommandDaoConfig = daoConfigMap.get(StatusCommandDao.class).clone();
        statusCommandDaoConfig.initIdentityScope(type);

        userModelDaoConfig = daoConfigMap.get(UserModelDao.class).clone();
        userModelDaoConfig.initIdentityScope(type);

        weightModelDaoConfig = daoConfigMap.get(WeightModelDao.class).clone();
        weightModelDaoConfig.initIdentityScope(type);

        analogCommandDao = new AnalogCommandDao(analogCommandDaoConfig, this);
        ctrlGetCommandDao = new CtrlGetCommandDao(ctrlGetCommandDaoConfig, this);
        sensorRangeDao = new SensorRangeDao(sensorRangeDaoConfig, this);
        spo2GetCommandDao = new Spo2GetCommandDao(spo2GetCommandDaoConfig, this);
        statusCommandDao = new StatusCommandDao(statusCommandDaoConfig, this);
        userModelDao = new UserModelDao(userModelDaoConfig, this);
        weightModelDao = new WeightModelDao(weightModelDaoConfig, this);

        registerDao(AnalogCommand.class, analogCommandDao);
        registerDao(CtrlGetCommand.class, ctrlGetCommandDao);
        registerDao(SensorRange.class, sensorRangeDao);
        registerDao(Spo2GetCommand.class, spo2GetCommandDao);
        registerDao(StatusCommand.class, statusCommandDao);
        registerDao(UserModel.class, userModelDao);
        registerDao(WeightModel.class, weightModelDao);
    }
    
    public void clear() {
        analogCommandDaoConfig.clearIdentityScope();
        ctrlGetCommandDaoConfig.clearIdentityScope();
        sensorRangeDaoConfig.clearIdentityScope();
        spo2GetCommandDaoConfig.clearIdentityScope();
        statusCommandDaoConfig.clearIdentityScope();
        userModelDaoConfig.clearIdentityScope();
        weightModelDaoConfig.clearIdentityScope();
    }

    public AnalogCommandDao getAnalogCommandDao() {
        return analogCommandDao;
    }

    public CtrlGetCommandDao getCtrlGetCommandDao() {
        return ctrlGetCommandDao;
    }

    public SensorRangeDao getSensorRangeDao() {
        return sensorRangeDao;
    }

    public Spo2GetCommandDao getSpo2GetCommandDao() {
        return spo2GetCommandDao;
    }

    public StatusCommandDao getStatusCommandDao() {
        return statusCommandDao;
    }

    public UserModelDao getUserModelDao() {
        return userModelDao;
    }

    public WeightModelDao getWeightModelDao() {
        return weightModelDao;
    }

}
